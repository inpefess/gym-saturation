version: 2.1

jobs:
  build-and-test:
    parameters:
      python_version:
        description: "Python version to test against"
        default: "3.10.4"
        type: string
    docker:
      - image: cimg/python:<< parameters.python_version >>
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-<< parameters.python_version >>-{{ checksum "poetry.lock" }}
      - run:
          name: install dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -U pip
            pip install -U wheel setuptools poetry
            poetry install
      - run:
          name: install vampire
          command: |
            mkdir vampire_bin
            cd vampire_bin
            wget https://github.com/vprover/vampire/releases/download/v4.6.1/vampire_z3_rel_static_master_5921.2.zip -O vampire.zip
            unzip vampire.zip
            mv vampire_z3_rel_static_master_5921 vampire
            chmod u+x vampire
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "poetry.lock" }}
      - run:
          name: run tests
          command: |
            export PATH=$(pwd)/vampire_bin:$PATH
            . venv/bin/activate
            pytest
      - run:
          name: run linters
          command: |
            . venv/bin/activate
            flake8 gym_saturation
            pylint gym_saturation
      - run:
          name: run type checks
          command: |
            . venv/bin/activate
            mypy gym_saturation
      - run:
          name: upload data to codecov
          command: |
            bash <(curl -s https://codecov.io/bash) -X gcov -X coveragepy
      - store_artifacts:
          path: build
      - store_test_results:
          path: test-results

workflows:
  workflow:
    jobs:
      - build-and-test:
          python_version: "3.7.13"
      - build-and-test:
          python_version: "3.8.13"
      - build-and-test:
          python_version: "3.9.12"
      - build-and-test:
          python_version: "3.10.4"      
